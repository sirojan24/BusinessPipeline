<script>
    var $table = $('#table');
    var extendColData = [];
    var initResponse;
    
    $(document).ready(function () {
        $("#tableDiv").show();
        iniFillTableData();
        $table.bootstrapTable('hideColumn', 'tags');
    });

    function iniFillTableData() {
        $table.bootstrapTable('showLoading');
        var data = '{{contactArray}}';
        var newString = data.replace(/&quot;/g, '"');
        initResponse = newString;
        $table.bootstrapTable('hideLoading');
        //$table.bootstrapTable('append', convertData(newString));
        var username = '{{name|lower}}';
        usernameFilter(username);
    }

    function refreshTable() {
        $table.bootstrapTable('removeAll');
        fillTableData();
    }
    
    function showHideContacts() {
        $table.bootstrapTable('removeAll');
        
        var showHide = $( "#showHide" ).children();
        
        if(showHide.hasClass("fa-eye")){
            showHide.removeClass( "fa-eye" );
            showHide.addClass( "fa-eye-slash" );
            showHide.attr("title","Show Other Contacts");
            var username = '{{name|lower}}';
            usernameFilter(username);
        }else{
            showHide.addClass( "fa-eye" );
            showHide.removeClass( "fa-eye-slash" );
            showHide.attr("title","Hide Other Contacts");
            $table.bootstrapTable('append', convertData(initResponse));
            
        }
    }

    function fillTableData() {
        $table.bootstrapTable('showLoading');
        $.post('{{path('contacts_contacts_table_data')}}', null,
                function (response) {
                    if (response) {
                        $table.bootstrapTable('hideLoading');
                        initResponse = response;
                        //$table.bootstrapTable('append', convertData(response));
                        var username = '{{name|lower}}';
                        usernameFilter(username);
                    } else {

                    }
                }
        );
    }

    function usernameFilter(username) {
        $table.bootstrapTable('removeAll');
        $table.bootstrapTable('showLoading');

        var jsonString = JSON.parse(initResponse);
        var filterContact = [];

        for (var i = 0; i < jsonString.contacts.length; i++) {
            var tempContact = jsonString.contacts[i];

            if (username.toLowerCase() === tempContact.username.toLowerCase()) {
                filterContact.push(tempContact);
            }

        }
        var filterOpportunitiesArray = {'contacts': filterContact};
        var jsonStr = JSON.stringify(filterOpportunitiesArray);

        $table.bootstrapTable('hideLoading');
        $table.bootstrapTable('append', convertData(jsonStr));
    }

    function fillTableDataWithUsername(username) {
        $table.bootstrapTable('removeAll');
        $table.bootstrapTable('showLoading');
        var path = '{{path('contacts_contacts_table_data_username_filter', {'username': '0'})}}';
        path = path.substring(0, path.length - 1);

        $.post(path + username, null,
                function (response) {
                    if (response) {
                        $table.bootstrapTable('hideLoading');
                        $table.bootstrapTable('append', convertData(response));
                    } else {

                    }
                }
        );
    }

    function storePageSize(size) {
        $.post('{{path('login_login_saveconfig')}}',
                {name: 'contactview', value: size},
        function (response) {
            if (response !== "false") {

            } else {
                console.log("error occured in getting the manage view number in contacts", response);
            }
        });
    }

    function checkAndSetValue(value, blankValue, scale, pre) {
        if (value === '' || value === null) {
            return blankValue;
        } else {
            if (pre === true) {
                return scale + '' + value;
            } else {
                return value + '' + scale;
            }
        }
    }

    function detailFormatter(index, row) {

        var tags = checkAndSetValue(row.tags, '-', '', true);
        var email = checkAndSetValue(row.email, '-', '', true);
        var telephone = checkAndSetValue(row.telephone, '-', '', true);

        var html = [];
        html.push('<div class"row">' +
                '<div class="col-xs-4">' +
                '<table class="table" style="margin-left:42px; border: none !important;line-height: 5px;">' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;width:30%"><small>Email</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + email + '</small></td>' +
                '</tr>' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;"><small>Telephone</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + telephone + '</small></td>' +
                '</tr>' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;"><small>Tags</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + tags + '</small></td>' +
                '</tr>' +
                '</table>' +
                '</div>' +
                '</div>');
        //html.push('<div class"row">' + index + '</div>');
        $.each(row, function (key, value) {
            //html.push('<p><b>' + key + ':</b> ' + value + '</p>');
        });
        return html.join('');
    }

    function convertData(response) {
        var jsonString = JSON.parse(response);
        extendColData = [];

        var startId = 1,
                rows = [];

    {#for (var i = 0; i < jsonString.users.length; i++) {
        var tempUser = jsonString.users[i];#}
                for (var i = 0; i < jsonString.contacts.length; i++) {
                    var tempContact = jsonString.contacts[i];

                    extendColData.push({
                        email: tempContact.email,
                        telephone: tempContact.telephone,
                        tags: tempContact.tags
                    });

                    var editPath = '{{ path('contacts_contacts_editcontactpageV2',{'id':0} )}}';
                    editPath = editPath.substring(0, editPath.length - 1);
                    
                    var newDealPath = '{{ path('opportunity_addcontactopportunityV2',{'id':0} )}}';
                    newDealPath = newDealPath.substring(0, newDealPath.length - 1);

                    var openDealPath = '{{ path('opportunity_opportunitycontactfilterV2',{'id':0, 'filter':0} )}}';
                    openDealPath = openDealPath.substring(0, openDealPath.length - 3);
                    
                    var taskPath = '{{path('task_manage_task',{'type':'contact', 'id':0} )}}';
                    taskPath = taskPath.substring(0, taskPath.length - 1);

                    var name = '{{name|lower}}';
                    var action = '';
                    if (name.toLowerCase() === tempContact.username.toLowerCase()) {
                        action = '<div class="pull-right">' +
                                '<div class="keep-open btn-group">' +
                                '<button class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown">' +
                                '<i class="glyphicon glyphicon-chevron-down"></i>' +
                                '</button>' +
                                '<ul class="dropdown-menu" role="menu" style="min-width: 0px !important;">' +
                                '<li><a href="' + newDealPath + tempContact.id + '"><i class="fa fa-usd"></i> New Deal</a></li>' +
                                '<li><a href="' + editPath + tempContact.id + '"><i class="fa fa-pencil-square-o"></i> Edit</a></li>' +
                                '<li><a href="#" onclick="notespopup('+ tempContact.id +')"><i class="fa fa-file-o"></i> Notes</a></li>' +
                                '<li><a href="'+taskPath + tempContact.id +'"><i class="fa fa-list"></i> Tasks</a></li>' +
                                '</ul>' +
                                '</div>' +
                                '</div>';
                    }
                    
                    var openDeal = tempContact.open_deal;
                    if(tempContact.open_deal > 0){
                        openDeal = '<a href="' + openDealPath + tempContact.id + '/Open' + '">' + tempContact.open_deal + '</a>';
                    }
                    
                    var wonDeal = tempContact.won_deals;
                    if(tempContact.won_deals !== '0'){
                        wonDeal = '<a href="' + openDealPath + tempContact.id + '/Won' + '">$' + tempContact.won_deals + '</a>';
                    }
                    
                    var lostDeal = tempContact.lost_deals;
                    if(tempContact.lost_deals !== '0'){
                        lostDeal = '<a href="' + openDealPath + tempContact.id + '/Lost' + '">$' + tempContact.lost_deals + '</a>';
                    }
                    rows.push({
                        name: tempContact.name,
                        company: tempContact.company,
                        open_deal: openDeal,
                        projected_revenue: '$' + tempContact.projected_revenue,
                        weighted_forecast: '$' + tempContact.weighted_forecast,
                        won_deals: wonDeal,
                        lost_deals: lostDeal,
                        owner: '<a href="javascript:usernameFilter(' + "'" + tempContact.username + "'" + ')">' + tempContact.owner + '</a>',
                        action: action,
                        email: tempContact.email,
                        telephone: tempContact.telephone,
                        tags: tempContact.tags

                    });
                }
                return rows;
            }

            function priceSorter(a, b) {
                a = +a.substring(1); // remove $
                b = +b.substring(1);
                if (a > b)
                    return 1;
                if (a < b)
                    return -1;
                return 0;
            }

            function rowStyle(row, index) {
                var classes = ['active'];

                if (index % 2 === 0) {
                    return {
                        classes: classes[0]
                    };
                }
                return {};
            }
</script>