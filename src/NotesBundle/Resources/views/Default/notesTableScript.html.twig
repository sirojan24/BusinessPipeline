<script>
    var $table = $('#table');
    var extendColData = [];
    var initResponse;

    $(document).ready(function () {
        $("#tableDiv").show();
        iniFillTableData();
        $table.bootstrapTable('hideColumn', 'tags');
    });

    function iniFillTableData() {
        $table.bootstrapTable('showLoading');
        var data = '{{notesArray}}';
        var newString = data.replace(/&quot;/g, '"');
        initResponse = newString;
        $table.bootstrapTable('hideLoading');
        $table.bootstrapTable('append', convertData(newString));
        //var username = '{{name|lower}}';
        //usernameFilter(username);
    }

    function refreshTable() {
        $table.bootstrapTable('removeAll');
        fillTableData();
    }

    function showHideContacts() {
        $table.bootstrapTable('removeAll');

        var showHide = $("#showHide").children();

        if (showHide.hasClass("fa-eye")) {
            showHide.removeClass("fa-eye");
            showHide.addClass("fa-eye-slash");
            showHide.attr("title", "Show Other Contacts");
            var username = '{{name|lower}}';
            usernameFilter(username);
        } else {
            showHide.addClass("fa-eye");
            showHide.removeClass("fa-eye-slash");
            showHide.attr("title", "Hide Other Contacts");
            $table.bootstrapTable('append', convertData(initResponse));

        }
    }

    function fillTableData() {
        $table.bootstrapTable('showLoading');
        $.post('{{path('contacts_contacts_table_data')}}', null,
                function (response) {
                    if (response) {
                        $table.bootstrapTable('hideLoading');
                        initResponse = response;
                        //$table.bootstrapTable('append', convertData(response));
                        var username = '{{name|lower}}';
                        usernameFilter(username);
                    } else {

                    }
                }
        );
    }

    function usernameFilter(username) {
        $table.bootstrapTable('removeAll');
        $table.bootstrapTable('showLoading');

        var jsonString = JSON.parse(initResponse);
        var filterContact = [];

        for (var i = 0; i < jsonString.contacts.length; i++) {
            var tempContact = jsonString.contacts[i];

            if (username.toLowerCase() === tempContact.username.toLowerCase()) {
                filterContact.push(tempContact);
            }

        }
        var filterOpportunitiesArray = {'contacts': filterContact};
        var jsonStr = JSON.stringify(filterOpportunitiesArray);

        $table.bootstrapTable('hideLoading');
        $table.bootstrapTable('append', convertData(jsonStr));
    }

    function fillTableDataWithUsername(username) {
        $table.bootstrapTable('removeAll');
        $table.bootstrapTable('showLoading');
        var path = '{{path('contacts_contacts_table_data_username_filter', {'username': '0'})}}';
        path = path.substring(0, path.length - 1);

        $.post(path + username, null,
                function (response) {
                    if (response) {
                        $table.bootstrapTable('hideLoading');
                        $table.bootstrapTable('append', convertData(response));
                    } else {

                    }
                }
        );
    }

    function storePageSize(size) {
        $.post('{{path('login_login_saveconfig')}}',
                {name: 'contactview', value: size},
        function (response) {
            if (response !== "false") {

            } else {
                console.log("error occured in getting the manage view number in contacts", response);
            }
        });
    }

    function checkAndSetValue(value, blankValue, scale, pre) {
        if (value === '' || value === null) {
            return blankValue;
        } else {
            if (pre === true) {
                return scale + '' + value;
            } else {
                return value + '' + scale;
            }
        }
    }

    function detailFormatter(index, row) {

        var tags = checkAndSetValue(row.tags, '-', '', true);
        var email = checkAndSetValue(row.email, '-', '', true);
        var telephone = checkAndSetValue(row.telephone, '-', '', true);

        var html = [];
        html.push('<div class"row">' +
                '<div class="col-xs-4">' +
                '<table class="table" style="margin-left:42px; border: none !important;line-height: 5px;">' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;width:30%"><small>Email</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + email + '</small></td>' +
                '</tr>' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;"><small>Telephone</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + telephone + '</small></td>' +
                '</tr>' +
                '<tr style="padding:0px;margin:0px;border-bottom: 1px solid #DCDCDC;">' +
                '<td style="border: none !important;line-height: 5px;"><small>Tags</small></td>' +
                '<td style="border: none !important;line-height: 5px;"><small>' + tags + '</small></td>' +
                '</tr>' +
                '</table>' +
                '</div>' +
                '</div>');
        //html.push('<div class"row">' + index + '</div>');
        $.each(row, function (key, value) {
            //html.push('<p><b>' + key + ':</b> ' + value + '</p>');
        });
        return html.join('');
    }

    function convertData(response) {
        var jsonString = JSON.parse(response);

        var startId = 1,
                rows = [];

        for (var i = 0; i < jsonString.notes.length; i++) {
            var tempNote = jsonString.notes[i];

            rows.push({
                content: tempNote.content,
                dateAndTime: tempNote.dateAndTime,
                owner: tempNote.owner,
                tags: '$' + tempNote.tags

            });
        }
        return rows;
    }

    function priceSorter(a, b) {
        a = +a.substring(1); // remove $
        b = +b.substring(1);
        if (a > b)
            return 1;
        if (a < b)
            return -1;
        return 0;
    }

    function rowStyle(row, index) {
        var classes = ['active'];

        if (index % 2 === 0) {
            return {
                classes: classes[0]
            };
        }
        return {};
    }
</script>