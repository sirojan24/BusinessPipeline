<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'web_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'webBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'web_support' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'webBundle\\Controller\\DefaultController::supportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/support',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'help_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HelpBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/help',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'TaskBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_savetask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TaskBundle\\Controller\\DefaultController::savetaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/savetask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_savenotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::savenotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/savenotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_managenotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::managenotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/managenotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_updatenote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::updatenoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updatenote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_getnote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::getnoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getnote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_getnotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::getnotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getnotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_savenote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::savenoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/savenote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notes_updatenotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NotesBundle\\Controller\\DefaultController::updatenotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updatenotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_addopportunity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::addopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_addcontactopportunity' => array (  0 =>   array (    0 => 'name',    1 => 'orgname',    2 => 'id',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::addcontactopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orgname',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'text',      1 => '/addcontactopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_saveopportunity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::saveopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/saveopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_editopportunity' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::editopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_limitededitopportunity' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::limitededitopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/limitededitopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_activateopportunity' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::activateopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activateopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_manageopportunity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::manageopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_manageopportunityV2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::manageopportunityV2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageopportunityV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_updateopportunity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::updateopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'opportunity_deleteopportunity' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpportunityBundle\\Controller\\DefaultController::deleteopportunityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteopportunity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_pipelinesetup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\DefaultController::pipelinesetupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pipelinesetup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_addaccounttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::addaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_saveaccounttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::saveaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/saveaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_manageaccounttypes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::manageaccounttypesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageaccounttypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_deleteaccounttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::deleteaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_editaccounttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::editaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_updateaccounttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::updateaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_activateaccounttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::activateaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activateaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_validateaccounttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\AccountTypeController::validateaccounttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/validateaccounttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_addstage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::addstageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addstage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_validatestage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::validatestageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/validatestage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_managestages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::managestagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/managestages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_savestage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::savestageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/savestage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_editstage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::editstageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editstage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_deletestage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::deletestageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletestage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_activatestage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::activatestageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activatestage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_updatestage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::updatestageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updatestage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_addproducttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::addproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_validateproducttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::validateproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/validateproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_saveproducttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::saveproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/saveproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_manageproducttypes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::manageproducttypesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageproducttypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_deleteproducttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::deleteproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_editproducttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::editproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_updateproducttype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::updateproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_activateproducttype' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\ProductTypeController::activateproducttypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activateproducttype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_addopportunitysource' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::addopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_saveopportunitysource' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::saveopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/saveopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_manageopportunitysources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::manageopportunitysourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageopportunitysources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_deleteopportunitysource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::deleteopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_editopportunitysource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::editopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_updateopportunitysource' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::updateopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_activateopportunitysource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::activateopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activateopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_validateopportunitysource' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\OpportunitySourceController::validateopportunitysourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/validateopportunitysource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'settings_getsale' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SettingsBundle\\Controller\\StageController::getsaleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getsale',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_managecontacts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::managecontactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contacts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_contacts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::managecontactsV2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactsV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_addcontact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::addcontactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addcontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_addcontactV2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::addcontactV2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addcontactV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_createcontact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::createcontactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/createcontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_contactvalidate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::contactvalidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactvalidate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_editcontactpage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::editcontactpageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editcontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_editcontactpageV2' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::editcontactpageV2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editcontactV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_updatecontact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::updatecontactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updatecontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_activate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_deletecontact' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::deletecontactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletecontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_uploadcontact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::uploadcontactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/uploadcontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_importcontacts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::importcontactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/importcontacts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_contactavailability' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::contactavailabilityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactavailability',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_filteredopportunities' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::filteredopportunitiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/filteredopportunities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_table_data' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::contactTableDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactTableData',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'contacts_contacts_table_data_username_filter' => array (  0 =>   array (    0 => 'username',  ),  1 =>   array (    '_controller' => 'ContactsContactsBundle\\Controller\\ContactsController::contactTableDataUsernameFilterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'text',      1 => '/contactTableDataUsernameFilter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'home_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_signin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::signinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signinV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_forgetPassword' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::forgetPasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_signup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::signupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_signupV2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::signupV2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signupV2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_termsofService' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::termsofServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/termsofService',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_privacy' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::privacyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/privacy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_uservalidateajax' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::uservalidateajaxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/uservalidateajax',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_adduser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::adduserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/adduser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_fullsignup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::fullsignupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fullsignup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_upload' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_importuser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::importuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/importuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_updateprofile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::updateprofileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateprofile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_getcompanyajax' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::getcompanyajaxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getcompanyajax',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::usersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_manageUsers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::manageUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manageUsers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_userTableData' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::userTableDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/userTableData',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_edituserpage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::editsingleuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editsingleuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_singleupdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::singleupdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/singleupdate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_deleteuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::deleteuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_activate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/activateuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_getusers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::getusersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getusers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_getCommissionoriginator' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::getCommissionoriginatorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getCommissionoriginator',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_getFullname' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DefaultController::getFullnameAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getFullname',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_selecteduseropportunities' => array (  0 =>   array (    0 => 'username',  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::selecteduseropportunitiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'text',      1 => '/selecteduseropportunities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_login_saveconfig' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Login\\LoginBundle\\Controller\\DashboardController::saveconfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/saveconfig',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
